> Find the average amount paid by the top 5 customers.  

WITH avg_amountpaid_cte (customer_id, customer_firstname, customer_lastname, customer_city, customer_country, avg_amount_paid) AS
(SELECT customer.customer_id,
		customer.first_name AS customer_first_name,
 		customer.last_name AS customer_last_name,
 		city.city AS customer_city,
 		country.country AS customer_country,
 		SUM(payment.amount) AS amount_paid
FROM payment
INNER JOIN customer ON customer.customer_id = payment.customer_id
INNER JOIN address ON customer.address_id = address.address_id 
INNER JOIN city ON address.city_id = city.city_id 
INNER JOIN country ON city.country_id = country.country_id 
WHERE city IN ('Aurora', 'Atlixco', 'Xintai', 'Adoni', 'Dhule',
			  'Kurashiki', 'Pingxiang', 'Sivas', 'Celeya', 'So Leopoldo')
GROUP BY first_name, last_name, customer.customer_id, city.city, country.country
ORDER BY SUM(payment.amount) DESC
LIMIT 5) 
SELECT customer_id, customer_firstname, customer_lastname, avg_amount_paid 
FROM avg_amountpaid_cte;


> Find out how many of the top 5 customers are based within each country.

WITH top_5_cte AS 
(SELECT customer.customer_id, customer.first_name, customer.last_name, country.country, city.city,
SUM(payment.amount) as total_amount_paid
FROM customer
INNER JOIN payment ON payment.customer_id = customer.customer_id 
INNER JOIN address ON customer.address_id = address.address_id
INNER JOIN city ON address.city_id = city.city_id
INNER JOIN country ON city.country_ID = country.country_ID
WHERE city IN ('Aurora', 'Atlixco', 'Xintai', 'Adoni', 'Dhule',
			  'Kurashiki', 'Pingxiang', 'Sivas', 'Celeya', 'So Leopoldo')
GROUP BY customer.customer_id, customer.first_name, customer.last_name, country.country, city.city
ORDER BY SUM(payment.amount) DESC
LIMIT 5)

SELECT country.country,
 COUNT (DISTINCT customer.customer_id) AS all_customer_count,
 COUNT (DISTINCT top_5_cte.customer_id) AS top_customer_count
FROM customer
LEFT JOIN address ON customer.address_id = address.address_id
LEFT JOIN city ON address.city_id = city.city_id
LEFT JOIN country ON city.country_id = country.country_id
LEFT JOIN top_5_cte ON country.country = top_5_cte.country
GROUP BY country.country
ORDER by top_customer_count DESC;

> Find out how many of the top 5 customers are based within each country.

SELECT country.country,
COUNT (DISTINCT customer.customer_id) AS all_cus_cnt,
COUNT (DISTINCT top_5_customer.customer_id) AS top_5_customers
FROM customer
LEFT JOIN address ON customer.address_id = address.address_id
LEFT JOIN city ON address.city_id = city.city_id
LEFT JOIN country ON city.country_id = country.country_id
LEFT JOIN
(SELECT customer.customer_id,
customer.first_name AS customer_fname,
customer.last_name AS customer_lname,
city.city AS customer_city,
country.country AS customer_country,
SUM(payment.amount) AS total_amount_paid
FROM payment
INNER JOIN customer ON customer.customer_id = payment.customer_id
INNER JOIN address ON customer.address_id = address.address_id
INNER JOIN city ON address.city_id = city.city_id
INNER JOIN country ON city.country_id = country.country_id
WHERE city IN ('Aurora', 'Atlixco', 'Xintai', 'Adoni', 'Dhule',
'Kurashiki', 'Pingxiang', 'Sivas', 'Celeya', 'So Leopoldo')
GROUP BY customer.customer_id, customer.first_name, customer.last_name, country.country, city.city
Order by SUM(payment.amount) DESC
LIMIT 5) AS top_5_customer
ON country.country = top_5_customer.customer_country
GROUP by country

> Find the top 10 countries for Rockbuster in terms of customer numbers

SELECT country.country AS top_10_countries,
    COUNT(customer_id) AS customer_numbers
FROM customer
INNER JOIN address ON customer.address_id = address.address_id
INNER JOIN city ON address.city_id = city.city_id
INNER JOIN country ON city.country_id = country.country_id
GROUP by country
ORDER BY COUNT (customer_id) DESC
LIMIT 10;

> Descriptive Statistics on 'Film Table' 
SELECT MIN(rental_rate) AS min_rental_rate,
      MAX(rental_rate) AS max_rental_rate,
      AVG(rental_rate) AS avg_rental_rate,
      MIN(release_year) AS min_release_year,
      MAX(release_year) AS max_release_year,
      AVG(release_year) AS avg_release_year,
      MIN(rental_duration) AS min_rental_duration,
      MAX(rental_duration) AS max_rental_duration, 
      AVG(rental_duration) as avg_rental_duration,
      MIN(replacement_cost) AS min_replacement_cost,
      MAX(replacement_cost) AS max_replacement_cost,
      AVG(replacement_cost) AS avg_replacement_cost,
 FROM film;
 
 
